[package]
name = "n42-clique"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
exclude.workspace = true

[dependencies]
once_cell.workspace = true
unexpected = "0.1"

hash-db = "0.16.0"
keccak-hash = "0.10.0"
itertools.workspace = true
derive_more.workspace = true
lazy_static = "1.4"

parking_lot.workspace = true
primitive-types = "0.3.0"
hex-literal = "0.3"
num-bigint = "0.4"
tiny-keccak = "2.0"
uint = "0.9"
sled = "0.34.7"


rlp = "0.4"
alloy-rlp.workspace = true
alloy-genesis.workspace = true
alloy-primitives.workspace = true
alloy-signer-local.workspace = true
alloy-signer.workspace = true
k256.workspace = true
rand.workspace = true
blst.workspace = true
secp256k1  = { workspace = true, features = ["recovery"] }
sha2.workspace = true
sha3 = "0.10.5"
# n42
n42-primitives.workspace = true

alloy-serde.workspace = true
# serde
bytes.workspace = true
serde.workspace = true

schnellru.workspace = true
#lru-cache = "0.1"
#lru = "0.7"
tracing.workspace = true
#log = "0.4"

#reth
#reth-rpc.workspace = true
#reth-rpc-eth-api.workspace = true
reth-primitives-traits.workspace = true
#reth-testing-utils.workspace = true
reth-provider.workspace = true
#reth-blockchain-tree.workspace = true
reth-storage-api.workspace=true
reth-primitives = { workspace = true, default-features = false, features = ["std", "reth-codec", "arbitrary"] }
reth-consensus.workspace = true
#reth-beacon-consensus.workspace = true
#reth-ethereum-consensus.workspace = true
reth-chainspec.workspace = true
#reth-engine-primitives.workspace = true
#reth-transaction-pool = { workspace = true, features = ["test-utils"] }
#reth-evm = { workspace = true, features = ["test-utils"] }
#reth-db = { workspace = true, features = ["test-utils"] }
#reth-db-common.workspace = true
#reth-network.workspace = true
eyre.workspace = true

# arbitrary utils
arbitrary = { workspace = true, features = ["derive"], optional = true }
hex = "0.4.3"

[lints]
workspace = true

